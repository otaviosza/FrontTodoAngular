{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../todo.service\";\nimport * as i2 from \"@angular/common\";\nfunction TodoListComponent_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function TodoListComponent_tr_10_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const todo_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.remover(todo_r1.TodolistaId));\n    });\n    i0.ɵɵtext(7, \"Remover\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const todo_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(todo_r1.TodolistaId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(todo_r1.TodolistaNome);\n  }\n}\nexport class TodoListComponent {\n  constructor(todoService) {\n    this.todoService = todoService;\n    this.todoList = [];\n    this.novoItemNome = '';\n  }\n  ngOnInit() {\n    this.todoService.getTodoList().subscribe(data => {\n      this.todoList = data;\n    });\n  }\n  loadTodoList() {\n    this.todoService.getTodoList().subscribe(data => {\n      this.todoList = data;\n    });\n  }\n  adicionarNovoItem() {\n    const novoItem = {\n      TodolistaNome: this.novoItemNome\n    };\n    this.todoService.addTodoItem(novoItem).subscribe(() => {\n      this.novoItemNome = ''; // Limpa o campo de entrada\n      this.loadTodoList(); // Atualiza a lista após a adição bem-sucedida\n    });\n  }\n\n  remover(todoId) {\n    this.todoService.deleteTodoItem(todoId).subscribe(() => {\n      // Após a remoção bem-sucedida, atualize a lista ou faça outras ações necessárias.\n      this.todoList = this.todoList.filter(item => item.TodolistaId !== todoId);\n    });\n  }\n  static #_ = this.ɵfac = function TodoListComponent_Factory(t) {\n    return new (t || TodoListComponent)(i0.ɵɵdirectiveInject(i1.TodoService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TodoListComponent,\n    selectors: [[\"app-todo-list\"]],\n    decls: 11,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n    template: function TodoListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\")(1, \"thead\")(2, \"tr\")(3, \"th\");\n        i0.ɵɵtext(4, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"th\");\n        i0.ɵɵtext(6, \"Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"th\");\n        i0.ɵɵtext(8, \"A\\u00E7\\u00F5es\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"tbody\");\n        i0.ɵɵtemplate(10, TodoListComponent_tr_10_Template, 8, 2, \"tr\", 0);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.todoList);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TodoListComponent_tr_10_Template_button_click_6_listener","restoredCtx","ɵɵrestoreView","_r3","todo_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","remover","TodolistaId","ɵɵadvance","ɵɵtextInterpolate","TodolistaNome","TodoListComponent","constructor","todoService","todoList","novoItemNome","ngOnInit","getTodoList","subscribe","data","loadTodoList","adicionarNovoItem","novoItem","addTodoItem","todoId","deleteTodoItem","filter","item","_","ɵɵdirectiveInject","i1","TodoService","_2","selectors","decls","vars","consts","template","TodoListComponent_Template","rf","ctx","ɵɵtemplate","TodoListComponent_tr_10_Template","ɵɵproperty"],"sources":["J:\\Site Node\\Teste Todo\\Angular\\FrontFinal\\src\\app\\todo-list\\todo-list.component.ts","J:\\Site Node\\Teste Todo\\Angular\\FrontFinal\\src\\app\\todo-list\\todo-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TodoService } from '../todo.service';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css'],\n})\nexport class TodoListComponent implements OnInit {\n  todoList: any[] = [];\n  novoItemNome: string = '';\n\n  constructor(private todoService: TodoService) {}\n\n  ngOnInit() {\n    this.todoService.getTodoList().subscribe((data: any) => {\n      this.todoList = data as any[];\n    });\n  }\n\n  loadTodoList() {\n    this.todoService.getTodoList().subscribe((data: any) => {\n      this.todoList = data;\n    });\n  }\n\n  adicionarNovoItem() {\n    const novoItem = {\n      TodolistaNome: this.novoItemNome,\n    };\n\n    this.todoService.addTodoItem(novoItem).subscribe(() => {\n      this.novoItemNome = ''; // Limpa o campo de entrada\n      this.loadTodoList(); // Atualiza a lista após a adição bem-sucedida\n    });\n  }\n\n  remover(todoId: number) {\n    this.todoService.deleteTodoItem(todoId).subscribe(() => {\n      // Após a remoção bem-sucedida, atualize a lista ou faça outras ações necessárias.\n      this.todoList = this.todoList.filter((item) => item.TodolistaId !== todoId);\n    });\n  }\n\n}\n","<table>\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Nome</th>\n        <th>Ações</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let todo of todoList\">\n        <td>{{ todo.TodolistaId }}</td>\n        <td>{{ todo.TodolistaNome }}</td>\n        <td>\n          <button (click)=\"remover(todo.TodolistaId)\">Remover</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
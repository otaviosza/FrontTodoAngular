{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../todo.service\";\nimport * as i2 from \"@angular/forms\";\nexport class TodoListComponent {\n  constructor(todoService) {\n    this.todoService = todoService;\n    this.todoList = [];\n    this.novoItemNome = '';\n    this.itemEditandoId = null;\n  }\n  ngOnInit() {\n    this.todoService.getTodoList().subscribe(data => {\n      this.todoList = data;\n    });\n  }\n  loadTodoList() {\n    this.todoService.getTodoList().subscribe(data => {\n      this.todoList = data;\n    });\n  }\n  adicionarNovoItem() {\n    const novoItem = {\n      TodolistaNome: this.novoItemNome\n    };\n    this.todoService.addTodoItem(novoItem).subscribe(() => {\n      this.novoItemNome = ''; // Limpa o campo de entrada\n      this.loadTodoList(); // Atualiza a lista após a adição bem-sucedida\n    });\n  }\n\n  remover(todoId) {\n    this.todoService.deleteTodoItem(todoId).subscribe(() => {\n      // Após a remoção bem-sucedida, atualize a lista ou faça outras ações necessárias.\n      this.todoList = this.todoList.filter(item => item.TodolistaId !== todoId);\n    });\n  }\n  editar(todo) {\n    this.novoItemNome = todo.TodolistaNome; // Preenche o campo de edição com o nome do item\n    this.itemEditandoId = todo.TodolistaId; // Armazena o ID do item que está sendo editado\n  }\n\n  salvarEdicao() {\n    const itemEditado = {\n      TodolistaId: this.itemEditandoId,\n      TodolistaNome: this.novoItemNome\n    };\n    this.todoService.editarTodoItem(itemEditado).subscribe(() => {\n      this.novoItemNome = ''; // Limpa o campo de entrada\n      this.itemEditandoId = null; // Limpa o ID do item em edição\n      this.loadTodoList(); // Atualiza a lista após a edição bem-sucedida\n    });\n  }\n  static #_ = this.ɵfac = function TodoListComponent_Factory(t) {\n    return new (t || TodoListComponent)(i0.ɵɵdirectiveInject(i1.TodoService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TodoListComponent,\n    selectors: [[\"app-todo-list\"]],\n    decls: 18,\n    vars: 1,\n    consts: [[\"lang\", \"en\"], [\"charset\", \"utf-8\"], [\"href\", \"/\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1\"], [\"rel\", \"icon\", \"type\", \"image/x-icon\", \"href\", \"favicon.ico\"], [1, \"container\"], [\"id\", \"adicao-form\", 1, \"hidden\", 3, \"ngSubmit\"], [\"type\", \"text\", \"placeholder\", \"Digite um novo item\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"id\", \"tabela\"], [\"id\", \"edicao-form\", 1, \"hidden\", 3, \"ngSubmit\"], [\"type\", \"button\", 3, \"click\"]],\n    template: function TodoListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1);\n        i0.ɵɵelementStart(3, \"title\");\n        i0.ɵɵtext(4, \"FrontFinal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"base\", 2)(6, \"meta\", 3)(7, \"link\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"body\")(9, \"div\", 5)(10, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function TodoListComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.adicionarNovoItem();\n        });\n        i0.ɵɵelementStart(11, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function TodoListComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.novoItemNome = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵtext(13, \"Adicionar\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(14, \"table\", 9);\n        i0.ɵɵelementStart(15, \"form\", 10);\n        i0.ɵɵlistener(\"ngSubmit\", function TodoListComponent_Template_form_ngSubmit_15_listener() {\n          return ctx.adicionarNovoItem();\n        });\n        i0.ɵɵelementStart(16, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function TodoListComponent_Template_button_click_16_listener() {\n          return ctx.voltarParaTabela();\n        });\n        i0.ɵɵtext(17, \"Voltar\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.novoItemNome);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n    styles: [\"body[_ngcontent-%COMP%] {\\n    font-family: Arial, sans-serif;\\n    background-color: #f4f4f4;\\n    margin: 0;\\n    padding: 0;\\n  }\\n  \\n  .container[_ngcontent-%COMP%] {\\n    max-width: 800px;\\n    margin: 0 auto;\\n    padding: 20px;\\n    background-color: #fff;\\n    border-radius: 5px;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  \\n\\n  form[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n    margin-bottom: 20px;\\n  }\\n  \\n  input[type=\\\"text\\\"][_ngcontent-%COMP%] {\\n    flex: 1;\\n    padding: 10px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n  }\\n  \\n  button[_ngcontent-%COMP%] {\\n    padding: 10px 20px;\\n    background-color: #007bff;\\n    color: #fff;\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n  }\\n  \\n  \\n\\n  table[_ngcontent-%COMP%] {\\n    width: 100%;\\n    border-collapse: collapse;\\n  }\\n  \\n  table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n    border: 1px solid #ccc;\\n    padding: 8px;\\n    text-align: left;\\n  }\\n  \\n  table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n    background-color: #007bff;\\n    color: #fff;\\n  }\\n  \\n  \\n\\n  .hidden[_ngcontent-%COMP%] {\\n    display: none;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdG9kby1saXN0L3RvZG8tbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLDhCQUE4QjtJQUM5Qix5QkFBeUI7SUFDekIsU0FBUztJQUNULFVBQVU7RUFDWjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsd0NBQXdDO0VBQzFDOztFQUVBLDRDQUE0QztFQUM1QztJQUNFLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsT0FBTztJQUNQLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCOztFQUVBLHFCQUFxQjtFQUNyQjtJQUNFLFdBQVc7SUFDWCx5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSxzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixXQUFXO0VBQ2I7O0VBRUEsa0NBQWtDO0VBQ2xDO0lBQ0UsYUFBYTtFQUNmIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmJvZHkge1xyXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgfVxyXG4gIFxyXG4gIC5jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiA4MDBweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIH1cclxuICBcclxuICAvKiBFc3RpbG8gZG8gZm9ybXVsw4PCoXJpbyBkZSBhZGnDg8Knw4PCo28gZSBlZGnDg8Knw4PCo28gKi9cclxuICBmb3JtIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgaW5wdXRbdHlwZT1cInRleHRcIl0ge1xyXG4gICAgZmxleDogMTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIH1cclxuICBcclxuICBidXR0b24ge1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICBcclxuICAvKiBFc3RpbG8gZGEgdGFiZWxhICovXHJcbiAgdGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gIH1cclxuICBcclxuICB0YWJsZSB0aCwgdGFibGUgdGQge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgfVxyXG4gIFxyXG4gIHRhYmxlIHRoIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICB9XHJcbiAgXHJcbiAgLyogRXN0aWxvIHBhcmEgb2N1bHRhciBlbGVtZW50b3MgKi9cclxuICAuaGlkZGVuIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["TodoListComponent","constructor","todoService","todoList","novoItemNome","itemEditandoId","ngOnInit","getTodoList","subscribe","data","loadTodoList","adicionarNovoItem","novoItem","TodolistaNome","addTodoItem","remover","todoId","deleteTodoItem","filter","item","TodolistaId","editar","todo","salvarEdicao","itemEditado","editarTodoItem","_","i0","ɵɵdirectiveInject","i1","TodoService","_2","selectors","decls","vars","consts","template","TodoListComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TodoListComponent_Template_form_ngSubmit_10_listener","TodoListComponent_Template_input_ngModelChange_11_listener","$event","TodoListComponent_Template_form_ngSubmit_15_listener","TodoListComponent_Template_button_click_16_listener","voltarParaTabela","ɵɵadvance","ɵɵproperty"],"sources":["J:\\Site Node\\Teste Todo\\Angular\\FrontFinal\\src\\app\\todo-list\\todo-list.component.ts","J:\\Site Node\\Teste Todo\\Angular\\FrontFinal\\src\\app\\todo-list\\todo-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TodoService } from '../todo.service';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css'],\n})\nexport class TodoListComponent implements OnInit {\n  todoList: any[] = [];\n  novoItemNome: string = '';\n  itemEditandoId: number | null = null;\n\n\n  constructor(private todoService: TodoService) {}\n\n  ngOnInit() {\n    this.todoService.getTodoList().subscribe((data: any) => {\n      this.todoList = data as any[];\n    });\n  }\n\n  loadTodoList() {\n    this.todoService.getTodoList().subscribe((data: any) => {\n      this.todoList = data;\n    });\n  }\n\n  adicionarNovoItem() {\n    const novoItem = {\n      TodolistaNome: this.novoItemNome,\n    };\n\n    this.todoService.addTodoItem(novoItem).subscribe(() => {\n      this.novoItemNome = ''; // Limpa o campo de entrada\n      this.loadTodoList(); // Atualiza a lista após a adição bem-sucedida\n    });\n  }\n\n  remover(todoId: number) {\n    this.todoService.deleteTodoItem(todoId).subscribe(() => {\n      // Após a remoção bem-sucedida, atualize a lista ou faça outras ações necessárias.\n      this.todoList = this.todoList.filter((item) => item.TodolistaId !== todoId);\n    });\n  }\n\n  editar(todo: any) {\n    this.novoItemNome = todo.TodolistaNome; // Preenche o campo de edição com o nome do item\n    this.itemEditandoId = todo.TodolistaId; // Armazena o ID do item que está sendo editado\n  }\n\n  salvarEdicao() {\n    const itemEditado = {\n      TodolistaId: this.itemEditandoId,\n      TodolistaNome: this.novoItemNome,\n    };\n  \n    this.todoService.editarTodoItem(itemEditado).subscribe(() => {\n      this.novoItemNome = ''; // Limpa o campo de entrada\n      this.itemEditandoId = null; // Limpa o ID do item em edição\n      this.loadTodoList(); // Atualiza a lista após a edição bem-sucedida\n    });\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>FrontFinal</title>\n  <base href=\"/\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body>\n  <div class=\"container\">\n    <form (ngSubmit)=\"adicionarNovoItem()\" id=\"adicao-form\" class=\"hidden\">\n      <input type=\"text\" [(ngModel)]=\"novoItemNome\" placeholder=\"Digite um novo item\">\n      <button type=\"submit\">Adicionar</button>\n    </form>\n    <table id=\"tabela\">\n      <!-- Tabela aqui -->\n    </table>\n    <form (ngSubmit)=\"adicionarNovoItem()\" id=\"edicao-form\" class=\"hidden\">\n      <!-- Formulário de edição aqui -->\n      <button type=\"button\" (click)=\"voltarParaTabela()\">Voltar</button>\n    </form>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}